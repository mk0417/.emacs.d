;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(project--dir-history consult--grep-history beframe-history query-replace-history extended-command-history minibuffer-history file-name-history))
(setq consult--grep-history '("#" "#prot-prefix"))
(setq beframe-history '("*scratch*"))
(setq query-replace-history '("up15" "up12"))
(setq extended-command-history '("project-vc-dir" "eval-buffer" "meow-last-buffer"))
(setq minibuffer-history '("~/.emacs.d/prot-lisp/prot-prefix.el" "Python 3 (ipykernel)"))
(setq file-name-history '("~/.emacs.d/lisp/init-keybinding.el" "~/.emacs.d/lisp/init-default.el" "~/.emacs.d/prot-lisp/prot-prefix.el" "~/Desktop/scratch.py" "~/.emacs.d/init.el" "~/.emacs.d/lisp/init-keychord.el" "~/.emacs.d/lisp/init-meow.el" "~/project/smartx/codes/monthly_low_blp.py" "~/.emacs.d/lisp/init-programming.el" "~/project/smartx/codes/uk_anomaly.py"))
(setq kill-ring '(#(":config
" 0 7 (fontified t face font-lock-builtin-face) 7 8 (fontified t)) #("(define-key python-mode-map (kbd \";\") 'prot-prefix-map)" 0 33 (fontified t) 33 36 (face font-lock-string-face fontified t) 36 55 (fontified t)) #("'(\"fh\" . mark-whole-buffer)
" 0 2 (fontified t) 2 6 (fontified t face font-lock-string-face) 6 27 (fontified t) 27 28 (fontified t)) #("   '(\"fi\" . indent-region)" 0 5 (fontified t) 5 9 (face font-lock-string-face fontified t) 9 26 (fontified t)) " \"s\" #'consult-line" #("   ;; prefix ;
   '(\";m\" . execute-extended-command)
   
" 0 3 (fontified t) 3 6 (fontified t face font-lock-comment-delimiter-face) 6 15 (fontified t face font-lock-comment-face) 15 18 (fontified t) 18 20 (fontified t) 20 24 (fontified t face font-lock-string-face) 24 52 (fontified t) 52 53 (fontified t) 53 56 (fontified t) 56 57 (fontified t)) " \"s\" #'consult-line" #("  \"l\" #'logos-focus-mode
" 0 2 (fontified t) 2 5 (fontified t face font-lock-string-face) 5 24 (fontified t) 24 25 (fontified t)) #("  \"f\" #'flymake-mode
" 0 2 (fontified t) 2 5 (fontified t face font-lock-string-face) 5 20 (fontified t) 20 21 (fontified t)) #("\"p\" #'p-find-file
  \"n\" #'p-find-file-in-notes
  \"j\" #'p-create-scratch-file
" 0 3 (fontified t face font-lock-string-face) 3 17 (fontified t) 17 18 (fontified t) 18 20 (fontified t) 20 23 (face font-lock-string-face fontified t) 23 46 (fontified t) 46 47 (fontified t) 47 49 (fontified t) 49 52 (face font-lock-string-face fontified t) 52 76 (fontified t) 76 77 (fontified t)) #("-in-config
" 0 10 (fontified t) 10 11 (fontified t)) "  \"r\" #'recentf
  \"p\" #'p-find-file-in-config
  \"n\" #'p-find-file-in-notes
  \"j\" #'p-create-scratch-file
  \"s\" #'save-buffer" "  \"D\" #'kill-buffer-and-window
  \"d\" #'prot-simple-kill-buffer-current
  \"h\" #'mark-whole-buffer" #("   '(\";'\" . meow-last-bufferd)
" 0 3 (fontified t) 3 5 (fontified t) 5 9 (fontified t face font-lock-string-face) 9 12 (fontified t) 12 28 (fontified t) 28 29 (fontified t) 29 30 (rear-nonsticky t fontified t) 30 31 (fontified t)) #("   '(\"fl\" . consult-line)
   '(\"fo\" . other-window)
   '(\"fr\" . recentf)
   '(\"fs\" . save-buffer)
   '(\"fv\" . split-window-right)
" 0 5 (fontified t) 5 9 (fontified t face font-lock-string-face) 9 25 (fontified t) 25 26 (fontified t) 26 31 (fontified t) 31 35 (face font-lock-string-face fontified t) 35 51 (fontified t) 51 52 (fontified t) 52 57 (fontified t) 57 61 (face font-lock-string-face fontified t) 61 72 (fontified t) 72 73 (fontified t) 73 78 (fontified t) 78 82 (face font-lock-string-face fontified t) 82 97 (fontified t) 97 98 (fontified t) 98 103 (fontified t) 103 107 (face font-lock-string-face fontified t) 107 129 (fontified t) 129 130 (fontified t)) #("   '(\"fb\" . switch-to-buffer)
   '(\"fd\" . prot-simple-kill-buffer-current)
   '(\"ff\" . find-file)
   '(\"fg\" . consult-ripgrep)
" 0 5 (fontified t) 5 9 (fontified t face font-lock-string-face) 9 29 (fontified t) 29 30 (fontified t) 30 35 (fontified t) 35 39 (face font-lock-string-face fontified t) 39 74 (fontified t) 74 75 (fontified t) 75 80 (fontified t) 80 84 (face font-lock-string-face fontified t) 84 85 (fontified t) 85 97 (fontified t) 97 98 (fontified t) 98 103 (fontified t) 103 107 (face font-lock-string-face fontified t) 107 126 (fontified t) 126 127 (fontified t)) #("meow-last-buffer" 0 16 (fontified t)) #("   '(\";m\" . execute-extended-command)" 0 3 (fontified t) 3 5 (fontified t) 5 9 (face font-lock-string-face fontified t) 9 37 (fontified t)) "\"v\" #'split-window-right
  \"d\" #'delete-window" #("'(\";d\" . delete-window)
   '(\";o\" . delete-other-windows)
" 0 2 (fontified t) 2 6 (fontified t face font-lock-string-face) 6 23 (fontified t) 23 24 (fontified t) 24 27 (fontified t) 27 29 (fontified t) 29 33 (face font-lock-string-face fontified t) 33 57 (fontified t) 57 58 (fontified t)) "\"v\" #'split-window-right
  \"d\" #'delete-window" #("\"u\" #'winner-undo
  \"r\" #'winner-redo
" 0 3 (fontified t face font-lock-string-face) 3 17 (fontified t) 17 18 (fontified t) 18 20 (fontified t) 20 23 (face font-lock-string-face fontified t) 23 37 (fontified t) 37 38 (fontified t)) " \"o\" #'delete-other-windows" #("(declare-function logos-focus-mode \"logos\")
" 0 1 (fontified t) 1 17 (fontified t face font-lock-keyword-face) 17 35 (fontified t) 35 42 (fontified t face font-lock-string-face) 42 43 (fontified t) 43 44 (fontified t)) #("
" 0 1 (fontified t)) #("   '(\";c\" . p-jupyter-remove-line-overlay)
" 0 3 (fontified t) 3 5 (fontified t) 5 9 (fontified t face font-lock-string-face) 9 42 (fontified t) 42 43 (fontified t)) #("   '(\";e\" . p-jupyter-eval-region-dwim)
" 0 3 (fontified t) 3 5 (fontified t) 5 9 (fontified t face font-lock-string-face) 9 39 (fontified t) 39 40 (fontified t)) #("   '(\";f\" . jupyter-eval-defun)
" 0 3 (fontified t) 3 5 (fontified t) 5 9 (fontified t face font-lock-string-face) 9 31 (fontified t) 31 32 (fontified t)) #("   '(\";j\" . jupyter-run-repl)
" 0 3 (fontified t) 3 5 (fontified t) 5 9 (fontified t face font-lock-string-face) 9 29 (fontified t) 29 30 (fontified t)) #("   '(\";r\" . jupyter-eval-line-or-region)
" 0 3 (fontified t) 3 5 (fontified t) 5 9 (fontified t face font-lock-string-face) 9 40 (fontified t) 40 41 (fontified t)) #("   '(\";C\" . jupyter-eval-remove-overlays)" 0 3 (fontified t) 3 5 (fontified t) 5 9 (face font-lock-string-face fontified t) 9 41 (fontified t)) #("  ;; F2 overrides that two-column gimmick.  Sorry, but no.
" 0 2 (fontified t) 2 5 (fontified t face font-lock-comment-delimiter-face) 5 58 (fontified t face font-lock-comment-face) 58 59 (fontified t)) #("
" 0 1 (fontified t)) #(")" 0 1 (fontified t)) #1=#("(use-package prot-prefix
  :ensure nil
  :bind-keymap
  ;; F2 overrides that two-column gimmick.  Sorry, but no.
  ((\"<insert>\" . prot-prefix)
   (\"<f2>\" . prot-prefix)
   (\"C-z\" . prot-prefix)))
" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 27 (fontified t) 27 34 (face font-lock-builtin-face fontified t) 34 41 (fontified t) 41 53 (face font-lock-builtin-face fontified t) 53 56 (fontified t) 56 59 (face font-lock-comment-delimiter-face fontified t) 59 113 (face font-lock-comment-face fontified t) 113 117 (fontified t) 117 127 (face font-lock-string-face fontified t) 127 147 (fontified t) 147 153 (face font-lock-string-face fontified t) 153 173 (fontified t) 173 178 (face font-lock-string-face fontified t) 178 196 (fontified t)) #("
" 0 1 (fontified t)) #("(\"<f2>\" . prot-prefix)" 0 1 (fontified t) 1 7 (face font-lock-string-face fontified t) 7 22 (fontified t)) #("(\"<insert>\" . prot-prefix)" 0 1 (fontified t) 1 11 (face font-lock-string-face fontified t) 11 26 (fontified t)) #1# ")" #(")" 0 1 (fontified t rear-nonsticky t)) " \"j\" (cons \"Jupyter\" 'prot-prefix-jupyter)" #("
" 0 1 (fontified t)) #("(declare-function magit-status \"magit\" (&optional directory cache))

" 0 1 (fontified t) 1 17 (fontified t face font-lock-keyword-face) 17 23 (fontified t) 23 31 (fontified t) 31 38 (fontified t face font-lock-string-face) 38 40 (fontified t) 40 49 (fontified t face font-lock-type-face) 49 68 (fontified t) 68 69 (fontified t)) #("(declare-function winner-redo \"winner\")
" 0 1 (fontified t) 1 17 (face font-lock-keyword-face fontified t) 17 30 (fontified t) 30 38 (face font-lock-string-face fontified t) 38 40 (fontified t)) #("(declare-function winner-undo \"winner\")
" 0 1 (fontified t) 1 17 (face font-lock-keyword-face fontified t) 17 30 (fontified t) 30 38 (face font-lock-string-face fontified t) 38 40 (fontified t)) #("
" 0 1 (fontified t)) #("
" 0 1 (rear-nonsticky t fontified t)) "(defvar-keymap prot-prefix-jupyter-map
  :doc \"Prefix keymap for jupyter.\"
  :name \"Jupyter\"
  :prefix 'prot-prefix-jupyter
  \"R\" #'run-ess-r
  \"l\" #'ess-eval-line
  \"s\" #'ess-eval-region
  \"j\" #'jupyter-run-repl
  \"r\" #'jupyter-eval-line-or-region
  \"f\" #'jupyter-eval-defun
  \"e\" #'p-jupyter-eval-region-dwim
  \"K\" #'jupyter-repl-clear-cells
  \"I\" #'jupyter-repl-interrupt-kernel
  \"i\" #'jupyter-inspect-at-point
  \"C\" #'jupyter-eval-remove-overlays
  \"c\" #'p-jupyter-remove-line-overlay
  \"w\" #'jupyter-repl-pop-to-buffer)" #("
" 0 1 (fontified t)) #("   '(\"fi\" . indent-region)
" 0 5 (fontified t) 5 9 (face font-lock-string-face fontified t) 9 25 (fontified t) 25 26 (fontified t rear-nonsticky t) 26 27 (fontified t)) "(define-key LaTeX-mode-map [(tab)] 'outline-cycle)" #("   '(\"fi\" . indent-region)" 0 5 (fontified t) 5 9 (face font-lock-string-face fontified t) 9 26 (fontified t)) #("   '(\"fv\" . split-window-right)" 0 5 (fontified t) 5 9 (face font-lock-string-face fontified t) 9 31 (fontified t)) " \"d\" #'delete-window" #("    '(\"d\" . delete-window)
" 0 3 (fontified t) 3 5 (fontified t) 5 6 (fontified t) 6 9 (face font-lock-string-face fontified t) 9 24 (fontified t) 24 25 (rear-nonsticky t fontified t) 25 26 (fontified t) 26 27 (fontified t)) " \"d\" #'delete-window" "(key-chord-define meow-insert-state-keymap \"jk\" [escape])" #("
" 0 1 (fontified nil)) #("blp_raw2403" 0 11 (fontified t))))
(setq register-alist 'nil)
